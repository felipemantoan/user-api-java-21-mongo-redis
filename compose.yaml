services:

  server:
    image: user-api_server:latest
    build:
      target: production
      context: .
    ports:
      - 8080:8080
      - 35729:35729
    environment:
      MONGO_HOST: mongo
      MONGO_DB: userAPI
      MONGO_USER: root
      MONGO_PASS: mantoan
      MONGO_PORT: 27017
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_TIMEOUT: 60000
      LOG_LEVEL: INFO
    # develop:
    #   watch:
    #     - action: sync+restart
    #       path: ./
    #       target: /app
    depends_on:
      mongo:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - spring-user-api
    
  redis:
    image: docker.io/library/redis:7.4
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
    volumes:
      - redis_data:/data
    ports:
      - 6379:6379
      - 8001:8001
    networks:
      - spring-user-api

  mongo:
    image: docker.io/library/mongo:8.0.4
    environment:
      MONGO_INITDB_DATABASE: userAPI
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: mantoan
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 5s
      timeout: 5s
      retries: 3
      start_period: 5s
    volumes:
      - mongo_data:/data/db
    networks:
      - spring-user-api
    ports:
      - 27017:27017

networks:
  spring-user-api:
    name: spring-user-api
    external: true

volumes:
  mongo_data:
  redis_data: